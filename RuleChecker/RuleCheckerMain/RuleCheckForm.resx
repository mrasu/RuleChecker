<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        EzaruM5IVGwoME0XGjkdGjomJUUgKUsnMFY8PWlAOVwuGiZFMC8sGx4NCBFQXG6ovdOKm7V9kaqNpLqP
        pryGm7GUpr2TpbyVrMKhvNCevM+iwNGlwdKYtsd4mqpTf5BPgJA3ZnQsWmwzYHtfjK1VhqxLeJ5gg6Ut
        QlgVGBwgHBsXGiIaITIWGTUYGTsYFzcYGTsTGDkXHj9ARWR+hKGLj6yeor5rb4iDh6C8wNifpbxvc4tS
        WG+0wtkVIjwiLU0XHUAgHkInJ0srNFksNl48P2xKQ2YpFB09JiQsGhsWEBURGiibrMGJl66xwNqvwNqm
        t9GqudOot9GdrsmnvNemwdudvNOsyd6kwdafvdCavtBwnrBWipdThIw2Z3EdTGE+bItOfaNRe6Vff6hE
        VnMJChQeGRsYGiQcIzQcIDkKDSkLDCYhIjxHSGRTVHB0dIzLzOCamqouLjxBQEpmZW5XV11ER0xJSU9J
        TFHK1enV4PZWYH4QFzgvMFJAQGQaIEUSGUA0Nl81Lk82JTA5JCM7KSgeFRgOFB94h5ewvNSntM6mtMuq
        utGuvdequ9WluNOit9OeuNaat9KYts+dvNObt8+avdGQu9BgkaFYjJNNgYhDc4U/bolKep5OeKJZfaNb
        cY0OEBobFhgiISo7P0o6QFNFSl9xc4Vubn5DQ1U/P09ZWWdLSlQ1MzlDQkRDQUE9OzpCQT1AQDo/Pjo8
        PDavsL6VmKcoLERUWHRDRWMfIUAlJEYUEjY6O11RUGofFiM8LjI9KywtISEgIydzf4nBz+WdrcS0wtiw
        wdSft8mSq7+DmLNzh6ZtgqJkfZ1ri6iDpL6QrseSssmMtcyEscZajZ1ViZlYjJ1Rg5pNfJxPfJ5XhqJi
        g5YSGB0UDw4oIyQqKy9ESlVweYM+RElBRUZAQUU7PT4+QEE/Pz9BQkBJSkZISUVFR0FHR0FGRz5FQj1E
        QjpwbHJNTFVvcH6nq72Slaq3udG8t9KEf5p/fpiHiJwrKjQjHCE+Li9FOTkmKS2ns7+mtMqot9GmtMuF
        lqtyip5nf5djdZJsfZ5xhKd9k7Z4lrN5mrSEobyGo76Epb+AqcJjlatTiJxbjqJbjaNRgJxQgJxWiJ9J
        cH8VIScUEhIWFBQRExQYISU7RkpPVlNDR0JISUVERUFFRkJFRkJJS0VKTEZGSEJISkRKS0JISUBGRDxD
        QTkwLSlHRUQxMjY7P0RLTVdUVGB9eIealaSKi5mgoq3IxsyVj5BxZWVwZ2pxdn+rt8mirsqqtdWepsSK
        krByf59wfJ58h61zfaVnc5t4i659lbN1kKuGnLiMpMKDnsB1mLl4p8JTiJ1ZjZ5nmatbjaROgJdDc4s3
        XHAcLDkJDxYJEhYLFBcLFho1PD9FSEZPUUtJSkZKS0dLTEhLTEhMUEtKTklHSUNLTUdMTkhJS0VGRz5C
        QzpPSUJEQTlCQT1AQT88Pj48PDxBPD42MDU/P0VKS09VVVVybm1uY2VlX2R5gpCtu9GUor+sttiSl7iS
        lLaFi66iq82fpMumrtOrt9mmuNW2zuabs8ubrsmgtdGHncBuj7B7qsZjl65dkaJgkqRlmKxgkqgvXnQO
        M0kaLj8AAAsACREABQwPGyE6QURUV1VUVE5MTUlPUExQUU1PUExMUEtNUUxNT0lMTkhMTkhISkRFRj1C
        QzpHQDdOSUBRTkZKR0JGRDxJRj5TTUZWUEtPTkpISUVNTEhRTkpSTE1LSlOFk6WZrcZtgp6wv9+Umbin
        qce/wt7N0e3Y3/rW4vrL3O+91OSLpbFFX20XKzxJXnSTq8dtjapijqtzpbxmmKpfkqJkmKlqnq9AbYIN
        MkgGHzMjO01NaXowSlgKGCQfJSxDRkRYWFJaW1dTVlRRVFJRVFJPU05QVE9QVE9KTklFSUNCRkBBQz0+
        QDpaUElNRT5NR0JQTEdTTUZYU0pZUEdZUklTUEhWVlBNTkVWVVFWU1VfY26fsseOpsJPaYepvdx3f5yO
        kqvY2vK3vNGdprqEkqSPpLOAmqaPqrSTrrimu8orQVMYMkpXeJJDbolwn7pqnLBjl6hflaZmmqtcipwV
        PVAnR1p3lquDpbyGpbxtfpECCxgWGxw7PzpcX11XWlhTVlRVWFZUWFNRVVBQVE9JTUhDR0JBRT9AQjw+
        QDpXTU1WTk9aT1FZUVJXTktcU09eUkxfVU5ZU05dWlVWVlBTVFBUVldmb3mKobeSsM1JaImOqslKVnI1
        O1KKjqHHzt/d6fvP4fLY8f/S7/7L6PazztxkfY0TLT4FIjc6XnY2XnpmlbBtnrRgk6dil6xlmKxgkKIF
        MEEjSllzmatwmLGLrcuGm7pKWG8HExkZHx5DSEZXWlhaXVtYW1lZXFpUV1VPUlBLT0pFSURDR0JARD8+
        Qj1YUVZYTlRaUFZeUlhdUlRgV1RfU09iVlJhWFVdWFVaWVVWWVdRVllzf4uatMyNr80/ZYVhgJ8eMUxO
        WW/p7//S2Ovf7f+1yN20z+SVssd5lKhfeo4yS188V2tHZntHa4M/Z4NdiaZzoblhk6lmmrFZjaRcjqIk
        UmMAKTU1Xm1wl7OXutxsh6x6j64ZKjcEEBIjKShWWVdjZmRbXlxbXlxXWlhRVFJQU1FHS0ZESENBRUA+
        Qj1bVFtcVVxfVFxgVV1hWFtiWltlWVljV1djWFpaVFVjYWBcXl5JUFNxgY2WssqKr8s6Yn80VnMHHDci
        Lka/xdy1utOOm7VbcIxSbIpBXXtFYHtac41mgJhkgJhXd446XXdAZoRwmrdsmrJnl69kla9ekatXiZ9C
        c4MAKjUyWWeVuNKUt9lUdJ1vjbBacYcABA0ABgkrLS1iZWNoa2liZWNfYmBUV1VUV1VKTUtIS0lBREI9
        QD5dWV5eWl9iWmFkWmBiW15jXV5nXF5oW11iV1poYWRLSUk5PT4lLjJRYW2fu9OKr8svVXM7XXpUa4V1
        hZxvdo90e5SBj6ubsMyXsc+Dn717k6+Cm7WBnLZ1k6xaeJU0U3JTdph5n8F5pb10o7lfkKplmLJShZ9Q
        gpYhTlkAJTFRcYiYt9YyVnxIao6Dm7cfL0AAAAQJCwtPUlBsb21hZGJcX11cX11UV1VOUU9MT01FSEY/
        QkBfYF5iYF9mYGFlXmFjXl9jXl9nX2BpXmFrYWdPSE1YV1lrbnJeZm13h5SWssqRs9AuUG1igJt5kamT
        o7qvts+VoLaCkqlyiZ9Yc4hZdot2j6OdtcuWsMiVsMtkfqJCXIR2lL2Jq899pMB6pLtol7Jll7Nhk69Y
        iqFSf40rUF4TL0BIZXonS2lAY4R7lbNJXHEABAsAAQA2OTdoa2loa2llaGZiY2FaW1lUVVNRUlBJSkhD
        REJgYlxkY19oY2JoYGFjX15iXl1kXl9mXl9jWV9fWV5jYmRfZGeNl56js8CXscmWs9JSb44nQ2J3jami
        s829yeGsuNCFl65KYnYYM0c9WWpwipuMpbmVsMp9mbhLZIxcdKKJo9GQrdSGqMV8pbxxn7dmlrJrnbtd
        jalfjKFBZXUKJDIXLj0iQlVxkKmass5NXnMAAQgFCgksLy1oa2lucW9namhhYmBgYV9YWVdUVVNMTUtF
        RkRhYVtmY19sZGRqYmNlYWBiYF9kYF9mYGFkXWJsZmtoZ2lVWl2iq7S3xtaXrsiXstR7krg0S3E6UHOL
        n765x+S6xuKPo7xPZ31BXHA3UmYaM0cFHTNceJZLZotMY5GHnM+Tq9mQqtKVsdOIqsd2orpxorxmlbRd
        jKtwnrZYfZEVLTkBFBsQJy9CWmZfdIlLW2wDCQ4ICwkXGhhQU1FvcG5pamhpZ2ZjYWBdW1paWFdRT05K
        SEdhXVxmYWBtYmVsYWRlYGFjYWFlYWBmYWJoYWRkXmNmaGlYXWCJkpvJ2OiTqsSXr9OcsNl5jbY+VnpH
        Xn6TpcSOoL2AlrJ2jqp7lrF5lK5rgpxaco53lLNNao90jbmYr92dtOGctd2ov+WWtdZ+psJsm7ZmlbFf
        jaxsm7dghp4VLTkBEhUIGBcACw0MHCk6SFQOFRgJDAoFCAYtMC5zdHJvcG5samlkYmFfXVxcWllUUlFN
        S0phWl9mW2NtXmZsXWVlXmNiX2FjYWFjYWFiXV9oZGlbXV5fZGeBipOwv8+Mob2ft9udsdqit91/m703
        U3JacZF6j6+ZsdWuyO2jvOScttuSqs6ZtNZ/oMFylbaYttmVsdSTrdKasNmmueSbtNyCqclolbBrmLNi
        ka1qmbhkjaYbMkEGExUKEQoGDQYLFxkaJSkIDg0LDgwNEA4eIR9mZ2VvcG5pZ2ZnZWRjX15hXVxZVVRU
        UE9jWmRnXGZqXGdpXGRjXWJhXmBiYGBjYWFjX2ReXWFiZWldY2h3gIp+jZ2Qo76juNi2yu2rweSjvuCX
        s9J0jKqetdWIn8Wet+GZst6btOCBmsKHoseCpceStdaYt9iVsNKIoMR9kriDlsGQqtKGrc2ItNFmk65Z
        iKNqmbhpkqsjPUsOGhwLDgUODwUHDgsCDQsNEhAHCwYNEA4QFA9BQkBtbmxvbWxraWhmYmFkYF9eWllZ
        VVRfWF9gWl9hW2BiXGFgXV9eXl5eXl5eXl5cW19gYGZdYGhXXWiCi5h3hZeIma6pvda/0u24zemov9+n
        vNypvNetwNubstKdt9yWr9uXsNyGn8mPrNOFpMuSstaatdqNpMp5jLJwg6hbdZlbfJ1tl7R1pMB8rMhe
        jqpgj6p1nLI1T1sQHyIPFBILDwkJEQoFEAgIDwoMEwwNEw4OEgwnKCRPUExvbmpvbmpraGRnZGBfXVxb
        WVhZVVpbV1xbWlxcW11cXFxcXFxdXV1dXF5aW19bXmNbXWdYXml0fYt6iZmcq76twNXA1O2nu9qnu96b
        r9Klt9SnutWhttWbtdmWr9mYs9+UsNmHpMt2l75+n8aTrtNwh61abJFrf6JsiahpjqpVf5xgj6twosBx
        ob1nla18pLZKZW8LHB8OFhUIDgkIEAkKEgsLEwwGDgcPFg8QFxATFQ83OTN4d3Nwb2tvbGhraGRkYmFg
        Xl1TUlZVVFhYV1lbWlxbWlxcW11cW11cW11cXWFdYGVXWWNWXGdncH52g5OiscGou9CyxuWXrNKJn8mH
        m8SZrM+ittWcstWQq9CVsNyTsNyOrdSDo8d1mb2DqMp6m7xjf56HnLtVa4dAXXhAY30dRWFKdpNgj65e
        jqpunbOBqrlad34FGRoNFhMJDQgLEQwSGBMQFxAFDAUNFA0OFQ4KDAYjJR95eHRwb2t0cW1wbWlraGRp
        ZmJRUFRTUlZXVlhaWVtcW11cW11cW11cW19ZWV9ZWGFaW2VhZXBbY3BNWGaPn6zB0uWovNuGm8GBl8F6
        jrdqfZ5ofJt0i6uKpMiNqtGSrteTsNWAoMN8osKKsNB/ob9FYn19la05UWccO1JBY3ssUW1Da4hciKdK
        eZVun7V6prNYeH4JHh8OFxQMDw0SFRMVGhgKEAsNFA0UGxQPEw0LDQcPEQtiYV16eXV4dXF1cm5wbWlt
        amZTUlZUU1dWVVlZWFxcW19dXGBcW19bWV9bWV9dXGVYWWNkZnB1e4YkLTpSYGzA0OCkts1+k6+OosV7
        kLB8jahhc4pedI16kq6as9WWrtKjvNyPq8l5mLdXdpUqSGU2UWs9V2hUbn5ScIEyU2dJbIZvlbNxmro4
        Z4NrnLJsmaZEaG4RKSkNGBYRFBIWGBkVFxcLEQwSGRIYHBYLDwkNDwkFBwFFRT9+fnh5eXN2dnB0cW1x
        bmpVVFhWVVlYV1taWV1dXGBeXWFdW2FcWmBbWGFjYGlgX2mBg41fZm8THCUiLzeRoa2htMmHnLd1iqqA
        lbQ2R2FLXnNddIpXboiIoL6txOShudW0z+p1lrAgQF0TMU4NKEIKJDQHIjA2VWRhgpWCpLyGq8c/ZoZS
        fptomrBgj500Wl8RKysLGBYTGBccGx0XFxcUGBMPFg8UGBIIDAYNDwkJCwU1NS9/f3l7e3V5eXN4dXF2
        c29YV1lZWFpbWl5cW19dW2FeXGJhXGViXWZmYWpgXWZkY2xrbXVtc3ogKC8WIihXZ3OoutFug6I4UHRm
        fJ87TmklOVJIYHhac411j62IosCVsMqBn7hyla9EaYMqTWcsTGMRL0AmQ1E4V2ZScoVaeZI0VnNjiqpj
        j6xll65bjJw2XWURLzAWJCMdIiEiIiIZGRkQFA8NFA0UGBIMEAoJDQcIDAYoKiR7fXd+fnh8fHZ7eHN6
        d3JaWVtcW11eXWFfXmJeXGJfXWNjXmdmYWplYGloY2xlYmtycXqChY05P0QCDRExQEmjtst3j60zS29M
        ZYdUaYRKYHk7U2tOaYReeph4lLKKpb+GpL2Ao71vlK5pjKZcfpZLa34xT2A6W2tScoVqiaJ5mrSRt9Vp
        lbJekKddjZ9FbnccOz4oODcqMC8nKCYaGxcPEw4PFg8OEgwLDwkNEQsOEgweIBpucGqAgHp+fnh+e3Z8
        eXRfXF5hXmBiXmNiXmNjX2VmYmhqYmxqYmxqYmxpZG1uaXJwbXZxdHlSVlsFCxAKFR2YrL2YsMhzi6lN
        ZYNLY3tYcIY/WXFBXHZphaOUsM6kv9mhv9igw92bwNyXudaTs9CVtM2iwdifwNSlxtqkw9qcvtaUu9d4
        or9nmLJnlqtWfYs4VlsrOjwoMS4hJSAUFhAKDggSFhANEQsPEw0JDQcNEQsXGRNYWlSBgXuAgHqGg359
        enVlYmRnZGZoZGloZGloZGprZ21vZ3FvZ3FyanR0bHZyanR4c3x9fYNucXYXHB8ABAt0hpGlvMypwdmL
        o7uXr8NWboA1UGVlgZmct9Kxy+m51O6y0Omy0+2u0O6ox+aox+auzey10/Csy+Smxt2cu9KXts+YvdmK
        tdB1pL9zorh9pLJMaXAkMzUkLSoQGA4MEQgJDQchJR8fIx0SFhAMEAoKDggXGRM4OjSDg32AgHp/fHd9
        enVsZ2lvamxxa3Bwam9xa3B0bnN3b3Z3b3Z1bXR5cXh1bXR+d36CgIaCgohDRksAAQU/TlGMoqh0i5p+
        l6dbc39FXGuBm6ymwda0zeezy+e1zOasxd+pxeOlxOOeutyjv+Kbudybutudvdqkw9yjwtmdvdSWudOG
        r8h/rcWDrsOStcNwipE0REMWIBoSGg8YHhMfJBsmKiQTFxENEQsSFhASFhAYHBYdIRtvcWuFhX+Cf3t7
        eHRwaWxybW90bnN1b3R2cHV5c3h8dXp8dHt+c3uAdX2AdX2CeoF/e4F+fIJvb3UNERYaJymesreZr7tu
        hZWKobCqxNK92Oyzz+ewy+apxN+pwtynwNqiwN2evdybt9mfu96VsteUtNegwN2lx9+iwdiautGTtc2L
        scmPudCNtciWtsOPpas6RkYTGxQRGQ4NFgkhJh0cIBoFCQMPEw0NEQsMEAoMEAoOEgxUVlCDhX+Gg398
        eXV2bXB3cHN5cnV6c3Z7dHd+d3qCeXyBd32EeH6DeX+Ge4ODe4KAeIKBfIWEgYotMDgVISeGmKOhtsuw
        yOCuxty40+ix0OmgwN2audieu9qfvNekwtufwtyav9udv9ycu9yXt9qXt9qlxeKqzOSlxNuevdKYuM+X
        udCbwNaYucyows6Ak5gWHh0UGxQVHRIWHhMmKyIcIBoPEw0RFQ8KDggNEQsLDwoMEAtCQz99fnqBfnp+
        e3d7cnV/dnmBeHt/eHt/eHuBen2Ee36Den2FeX+GeoCGeYGDeICEe4WLg41/eoNERk4dJy5gcHyVqr+t
        xd22zuavy+OgvtmbvduXttehwN+lwt2qyeKnyuShxuCkxuOfvt2cvd6au9yjw+Cnxt+jwtmevdKbutGY
        t8ylxtqgv86it79MW10RGBUVGRMgJRwfJx0pLScWGhQRFQ8NEQsQFA4SFhAQFA8OEg03ODR8fXmDgHx9
        enaBdnmCeXyFfH+Ee36FfX6Gfn+IfX+HfH6Nf4OLf4WGeYGGe4OFfIaIgIqAeoVQT1geJSg8SlCSpbSx
        xtuuxtqwy+CryeKdvdqhvd+pxuWtyOOryeKqy+Wqy+WoxuOiwN2evdybutmbvNadvNWaudCfu9OkwNij
        wNWdu8yEoKtUZ2wTHx8WHBccHhgqLighJR8XGxUKDggPEw0PEw0QFA4MEAoOEg0PEw4/QDyDhICGgoF7
        d3aCd3qDen2GfYCGfYCGfn+IgIGKf4GJfoCJfoGJfYOGeoCMgYmHf4aEfIaalZ5iYmgQFhUdKSlpeYWt
        wtG0y9u40eWyzuaqx+KpxeSrx+WvyuSpxd2syuOx0OmqyOGnxt+fwNqau9WXudGfwNSkwdahus6Rqb16
        kaFFXWk1S1ERHiAYIR4YHBcyNC4yNjEhJR8eIBoaHBYTFxERGBEMEwwUGxQZHxoYHhlSVlGGh4OBfXx9
        eXiGfYCIf4KKgYSKgYSMgYSMgYSLgIOKf4KKfoSFe4GHfYOFfoODfYKFgYeHg4lgYWUMEhEOGRcvPUOR
        pKy4ztq3z+GrxtumwduhvNesx+KnwNqsxt6xzuOtzeCkxdWszt6kx9unyt6lxtmmxNWatcN0ipZKXGcx
        QUgdKS0tOTkPFRQVGxYpLSc4PDYqLigvMSssLCYWFw4aHhgWHhcRGxUVIRsFDgsaIR5ZXlx8fXuBfnp+
        eXaFfoGHgIOLgoWLgoWNgoWNgoWNgoWMgYSIfoSIfoSFfoOIgod7dXp6dnuPjpJsbm9cYmESHRsKFxky
        QkiOoam0ydiyyNqtxtqrxtuowtqzy+G2z+Olv9CUr72Ho66MqrWMq7qQr75+m6lfeoRLYGgwQ0gpNTke
        KCgjKyocIR8TGRQeJR4vNi9AR0AmLSYwNC4xMSsyMiwgJB4XHxgQHBYJFxEPGhctNjNnbGp/gH6DfnuA
        eXaGf4KIgYSMg4aMg4aNgoWOg4aPg4mPg4mKgIaHfYOEfYJ6dHl0bXR+eoCSkJaRkpZWXl4gLSsMGBgh
        LjBDUVd/kJmXqbScsr6ascCXsb+nwc+bssGDmaVdb3pEVV5IWWJNYmpDWGBIW2I/UlcdLC8kMDAxPDo1
        PjsjKiUOFQ4aIhguNy0/SkAqNSsnNSooMCksMCodHhoUGhUSHBYSHRoQHhodKCVNVlN9gH6Fg4KFgH2B
        eneGf4KIgYSMg4aLgoWOg4aOg4aPg4mPg4mLgYeGfIKKg4iFf4SKg4qKhox4dnxucXYeKCguOjoVISEk
        MDAwPD49SExXY2lNXWNLXmNFWF9VaG9CVVw0REskMDYwOD82PkU8SEwrOjwzQEIdKSkqNTMxOjc+RUA+
        RT4SGhAeJhwpMSc8RTsyPTMnNSowPTUfLCQXHRgaHx0MFRIMFxQPHRkMGhYxPDlye3iKjYuGhIOFgH2C
        e3iHf4CJgYKLgoWLgoWNgoWOg4aOgoiOgoiKf4eHfISBeYCAeYB3b3l1cHl9eoN4e4AvOz0iMC8ZJSUS
        HBwoMC8xNzYpMTA2PzwsNzQ4RUM2Q0EmMjIhKyshJikrLjIqLi88REMoMzAiLSopMy09RT4dJB0aHhgV
        GhEdIhkjKB87QzkqMisiKiMeKSEnMy0lMC0WHh0VHRwRHhwGExEEEhAoNTNibWuLkZCNjoyGgoGHgH2E
        e3iGfn+JgYKLgoWLgoWNgoWMgYSMgIaLf4WKf4eEeYF8dHt+d356dX56dX5zcHlsbnZXYmYqOTsEEBIM
        FhZLUVBlamg6QDtmamSChoBkaGI4Pzg3PTgnLCocHx0mKCg4OjopLyoWHRgwODE1PDUWGhQaHhgZGxUh
        Ix0cHhgXGxUlKyYyOTYeJSIdJSQSHRsfKysbJycFERECEA8LGRhBT052goJ4gH9rcG+Ki4mFgYCHgH2F
        fHmGfn+JgYKLgoWMg4aLgoWKgYSIfoSHfYOHfISDeIB9dH53b3l0bnl4cn1rZ3Jyc31XYmpGVFo0Q0Yt
        OjwmMS8NFBEYHBcuMCpWVExcWlJycGhvb2lBQz0pLSgxNjQjKiUiKCM2PTYkKyQvMy1KTkguLyseIh0h
        JSAaHRsTGBYSGBcpMTEnMDMiLTEtODwpNTkQHyIHFhgNHB42Q0VfbG57hYWSmJd9f3+Fg4KGgYCIf3yG
        e3eGfn+JgYKMg4aNhIeMg4aKgYSIfoSGfIKCd39+dn10bHZ5dH1vaXRrZ3Jva3dlZXFqc3xEUVlgbnQ5
        RUkWIiQSGhkUGRcZGhYbGBQnJB9APDdAPThcXlhFS0Y9R0E6RD5NUUtDRT89PzkrLScWFxMjJCI1ODYv
        NDMgJiUXHx8SGx5CTVFCTlQ2Q0s3Rk8rO0ImNjwrPD8+TU9caWtteXttdXV8gYB+f32BfXyHgH2IfXmC
        d3OBen2FfoGJgoWKg4aKg4iJgoeHf4aEfIN/doB7c312bnlwanVuZ3RrZ3NpZXFiYm5gZnFcZnBbZm5h
        bHRBTVMaJSkdJCcWGxwXGRkfISEkJSMiJSMqLy0pMi8nMi8sNjApKyUzMCs1NDAjIh4WFxUjJiQ3PDst
        MjMnMDMOGR0jMTdpeYBugYljeIBPZXBQZW1RZGluf4JebXBZZmhrdHdtcnN/gYF9e3qJhIOJgH2Ge3eC
        dnB9dnmBen2FfoGHgIOIgYaIgYaGfoWBeoF8dH53cntzbXhsaHNqZnJmZHBjYW1eXmpaXmlTXGZUXWdL
        VF5mcXlkb3c1P0YyPEMeJyseJyoVHx8jLS0uOTcgKykXJCIhKicmJyMrKyUbGhYXGBQiJSMuMzEpLi8l
        Ly8aJykJGBtQY2hrfoVdcnpcc3t1jph2jZVvgodaaWxuen54gYR3f397gH9/gH6HhICFfnuHfHiDd3F/
        c215dHZ8d3mAen+CfIGEfYSFfoWCeoR8d4B4cn12cHtxandrZ3NoY3JjYG9eW2pYWGZVVmRQU2FIS1lK
        UF1kbXd9h5GQnKZ+jZZTZWwdMTYZLC8UJSgYJykYJCYdJycZISAcIh0ZIBkdIx4jKiUpMC0UHRoyPDwc
        KikUIyUjNDd/kpd1iY5xh41heX9pgIh8kphxgINeamxpcnVxeXlzeHd3eHZ7eHR9eXSEe3eEenOBdW+A
        c2t0b3F2c3V7dXp7d3x/eH99eX97dn94c3x2cHtxbXhtaXVnZXFjYG9dXWtXV2VTU2FMTVtMTllFSFZM
        UFtHTVpVX2lod4CKnaV5kJhEXmREXGJCWF1BVFk/TlE0P0McJSgSHRofKyUUIh4fLSkOGxkeLCpCUE8Y
        JykVJygvQENleHtgc3hgc3hzh4xXa3BbbnNmcnR1f39pbm9nbGt0dXN1dHCAfHd9d3CCeHGCd2+BdGx+
        cmhsaG1vbnJ1cXd0cnh3c3l1c3l0cXpxbndva3ZranRnZXFgYGxcXGpXWGZRUmBMTVtLTVhAQkxDRVA6
        P0g5P0orND1odX1gcnlJX2VgeH5SbHI3T1VQY2pTY2pbZm4qNjwdLSwZLCkXKSgpOzorPTxIWlsrPT4c
        LTBCU1Y9TlFTYmUxQENCUVRdaW1daW1SXmBUXFxjaWhmaGhoaWdsa2dybml7c2x8c2p+c2t/c2l9cWd9
        b2NkY2doZ2tta3FvbXNwbnRxb3VwbXZsa3RpaHJkZW9gYGxcXGhXWGZSU2FMTVtHSVQ+QEpAQkw/QUs3
        PUQyOkE1P0ZEUFQ0Q0YvQkdHW2BCWF1MYmhwg4p/kpqHmKFPYWhabXBAVFU7TlFdcHM6TVBCVVgvQkdL
        XmNre4FDUVc2Qkg1QUUwOz86RkhDTE9FTE9NUlFZXFpjZGJramZrZ2JvaWJ4b2Z8cmh9cWd8cGR8bmJ6
        bGBdW2FhX2VjY2llZWtnZm9paHFoZ3FmZW9jYmxeX2laWmZUVmFQUV9MTVtFSFZARE8+QEo4O0M3PUQ1
        O0A1PkExOj0mMDAvOTlRWl10gIJlcXVnd31RY2pvhIx1i5Zle4aElp1MXGN0g4xufYZhcHlldH1EU1xB
        UFlvfIQ5Rk40P0dJVVtHUVhBTFBRWl5FTE9MTk5eXFteWllnYl9rYl5wZl93bGR6bmR7b2V5bWF4al54
        aFtXVVtaWF5cXGJeXmRhYGljYmthYGpeXWdbXGZYWWNSVF9OUFtKS1lHSFZAQ1E7P0o3OUMzNj4wNjsy
        OTwrNDcvOTkxOTgtNTQoLS50fHxfaGxGUlhEVl0pPkYnQU0vSFJQYGxGUlxIVGA7R1M+TFg/TVk1Q08s
        OkYwPEY+SlQ2QUkkLzczPUQ0PkVCS09CSUxNTU1QTk1ZVFFjXVhkW1dwZ15zZl50aF52al50aFx1ZVhx
        YVQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAA=
</value>
  </data>
</root>